{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaha\\\\Desktop\\\\brand-rating-system\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiRequest } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated on mount\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const response = await apiRequest('/auth/profile', {\n            headers: {\n              Authorization: `Bearer ${storedToken}`\n            }\n          });\n          setUser(response.user);\n          setToken(storedToken);\n        } catch (error) {\n          // Token is invalid, remove it\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    const response = await apiRequest('/auth/login', {\n      method: 'POST',\n      data: {\n        email,\n        password\n      }\n    });\n    const {\n      user: userData,\n      token: userToken\n    } = response;\n    localStorage.setItem('token', userToken);\n    setUser(userData);\n    setToken(userToken);\n    return response;\n  };\n  const register = async userData => {\n    const response = await apiRequest('/auth/register', {\n      method: 'POST',\n      data: userData\n    });\n    const {\n      user: newUser,\n      token: newToken\n    } = response;\n    localStorage.setItem('token', newToken);\n    setUser(newUser);\n    setToken(newToken);\n    return response;\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setToken(null);\n  };\n  const updateProfile = async profileData => {\n    const response = await apiRequest('/auth/profile', {\n      method: 'PUT',\n      data: profileData,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUser(response.user);\n    return response;\n  };\n  const hasRole = role => {\n    return (user === null || user === void 0 ? void 0 : user.role) === role;\n  };\n  const hasAnyRole = roles => {\n    return roles.includes(user === null || user === void 0 ? void 0 : user.role);\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    hasRole,\n    hasAnyRole,\n    isAuthenticated: !!token && !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"SflmuOnOA8Q8jh7hPzzYc2OVISc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiRequest","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","initAuth","storedToken","response","headers","Authorization","error","removeItem","login","email","password","method","data","userData","userToken","setItem","register","newUser","newToken","logout","updateProfile","profileData","hasRole","role","hasAnyRole","roles","includes","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chaha/Desktop/brand-rating-system/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { apiRequest } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is authenticated on mount\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const storedToken = localStorage.getItem('token');\r\n      if (storedToken) {\r\n        try {\r\n          const response = await apiRequest('/auth/profile', {\r\n            headers: { Authorization: `Bearer ${storedToken}` }\r\n          });\r\n          setUser(response.user);\r\n          setToken(storedToken);\r\n        } catch (error) {\r\n          // Token is invalid, remove it\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    const response = await apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      data: { email, password }\r\n    });\r\n\r\n    const { user: userData, token: userToken } = response;\r\n    \r\n    localStorage.setItem('token', userToken);\r\n    setUser(userData);\r\n    setToken(userToken);\r\n    \r\n    return response;\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    const response = await apiRequest('/auth/register', {\r\n      method: 'POST',\r\n      data: userData\r\n    });\r\n\r\n    const { user: newUser, token: newToken } = response;\r\n    \r\n    localStorage.setItem('token', newToken);\r\n    setUser(newUser);\r\n    setToken(newToken);\r\n    \r\n    return response;\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setToken(null);\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    const response = await apiRequest('/auth/profile', {\r\n      method: 'PUT',\r\n      data: profileData,\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    setUser(response.user);\r\n    return response;\r\n  };\r\n\r\n  const hasRole = (role) => {\r\n    return user?.role === role;\r\n  };\r\n\r\n  const hasAnyRole = (roles) => {\r\n    return roles.includes(user?.role);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    hasRole,\r\n    hasAnyRole,\r\n    isAuthenticated: !!token && !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}