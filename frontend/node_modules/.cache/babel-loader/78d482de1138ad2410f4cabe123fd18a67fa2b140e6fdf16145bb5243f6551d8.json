{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response$data, _error$response2, _error$response3;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'An error occurred';\n\n  // Don't show toast for 401 errors (handled by auth context)\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) !== 401) {\n    toast.error(message);\n  }\n\n  // If token is invalid, remove it\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Generic API request function\nexport const apiRequest = async (endpoint, options = {}) => {\n  const {\n    data,\n    ...config\n  } = options;\n  const requestConfig = {\n    ...config,\n    url: endpoint\n  };\n  if (data) {\n    requestConfig.data = data;\n  }\n  return api(requestConfig);\n};\nexport default api;","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","_error$response","_error$response$data","_error$response2","_error$response3","message","status","removeItem","window","location","href","apiRequest","endpoint","options","requestConfig","url"],"sources":["C:/Users/chaha/Desktop/brand-rating-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    const message = error.response?.data?.error || error.message || 'An error occurred';\r\n    \r\n    // Don't show toast for 401 errors (handled by auth context)\r\n    if (error.response?.status !== 401) {\r\n      toast.error(message);\r\n    }\r\n    \r\n    // If token is invalid, remove it\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Generic API request function\r\nexport const apiRequest = async (endpoint, options = {}) => {\r\n  const { data, ...config } = options;\r\n  \r\n  const requestConfig = {\r\n    ...config,\r\n    url: endpoint,\r\n  };\r\n  \r\n  if (data) {\r\n    requestConfig.data = data;\r\n  }\r\n  \r\n  return api(requestConfig);\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;;AAEnC;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,GAAG,CAACQ,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACAJ,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACT,MAAMC,OAAO,GAAG,EAAAJ,eAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBN,KAAK,KAAIA,KAAK,CAACS,OAAO,IAAI,mBAAmB;;EAEnF;EACA,IAAI,EAAAF,gBAAA,GAAAP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;IAClC3B,KAAK,CAACiB,KAAK,CAACS,OAAO,CAAC;EACtB;;EAEA;EACA,IAAI,EAAAD,gBAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAClCb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EAEA,OAAOb,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMe,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC1D,MAAM;IAAEb,IAAI;IAAE,GAAGT;EAAO,CAAC,GAAGsB,OAAO;EAEnC,MAAMC,aAAa,GAAG;IACpB,GAAGvB,MAAM;IACTwB,GAAG,EAAEH;EACP,CAAC;EAED,IAAIZ,IAAI,EAAE;IACRc,aAAa,CAACd,IAAI,GAAGA,IAAI;EAC3B;EAEA,OAAOpB,GAAG,CAACkC,aAAa,CAAC;AAC3B,CAAC;AAED,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}